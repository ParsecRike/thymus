<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">
<!-- All relative href/src URLs should be relative to the application's context defined on the Thymus script  -->
<body>
	<div id="paths" class="panel panel-default">
		<div class="panel-heading">
			<h2>Path/Siphon Resolution</h2>
		</div>
		<div class="panel-body app-code">
			<h3 id="fragpath">Fragment Path Resolution</h3>
			<p>
				Because <b>thymus.js</b> runs on the client it's not inherently
				application context aware. Therefore, <b>thymus.js</b> uses a
				configurable
				<code>data-thx-context-path</code>
				attribute on the <b>thymus.js</b> script tag. It's value establishes
				the path to the root context of the application that will be
				resolved along with the fragment's <b>path siphon</b>. <b>path
					siphon</b>s can point to resources with different path levels. So, it's
				important that the
				<code>data-thx-context-path</code>
				synchronizes with the resources defined within the <b>path
					siphon</b>. For example, a fragment that resides in <b>example.com/my-app/frags/nav.htm</b>
				may also be included in <b>example.com/my-app/index.htm</b> as well
				as <b>example.com/my-app/user/info.htm</b>. If the <b>siphon
					attribute</b> is defined something like:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
	style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;topnav&quot;</span><span
	style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
			<p>
				And both <b>example.com/my-app/index.htm</b> and <b>example.com/my-app/user/info.htm</b>
				contain a corresponding <b>siphon attribute</b>:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
	style="color: #FF0000">data-thx-include=</span><span
	style="color: #0000FF">&quot;frags/nav/nav :: #topnav&quot;</span><span
	style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
			<p>
				Then the <b>thymus.js</b> script definitions would be as follows:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span
						style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span
						style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- example.com/my-app/index.htm --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span
						style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;js/thymus.js&quot;</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymus&quot;</span> <span
						style="color: #FF0000">data-thx-context-path=</span><span
						style="color: #0000FF">&quot;.&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>

<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #000080; font-weight: bold">&lt;head&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;meta</span> <span
						style="color: #FF0000">charset=</span><span style="color: #0000FF">&quot;utf-8&quot;</span> <span
						style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- example.com/my-app/user/info.htm --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span
						style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymus&quot;</span><span
						style="color: #FF0000">data-thx-context-path=</span><span
						style="color: #0000FF">&quot;../&quot;</span> <span
						style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/head&gt;</span>
</pre></div>
			<p>
				Notice that in both resources the
				<code>data-thx-context-path</code>
				points to <b>example.com/my-app</b> with <b>my-app</b> being the
				root context (<b>example.com/my-app/index.htm</b> uses <b>"."</b>
				which infers the current path; which would be <b>example.com/my-app/</b>
				while <b>example.com/my-app/user/info.htm</b> uses <b>"../"</b>
				which infers one directory up; which would be <b>example.com/my-app/</b>).
				This vastly simplifies <b>path siphon</b> resolution (especially for
				nested fragments) and ensures that all <b>path siphon</b>s are
				relative to the root context path of the application. It also
				permits the use of the same context path to be used within multiple
				<b>path siphon</b>s; regardless of where the page that defines it
				resides.
			</p>
			<h4 id="fileextensions">Fragment File Extensions</h4>
			<p>
				File extensions in <b>path siphon</b>s are optional (and sometimes
				undesirable). That's why <b>thymus.js</b>, by default, will use the
				URL defined in a <b>path siphon</b> per verbatim unless a
				<code>data-thx-frag-extension</code>
				is defined. If a
				<code>data-thx-frag-extension</code>
				attribute is defined on the <b>thymus.js</b>
				<code>script</code>
				it will append the
				<code>data-thx-frag-extension</code>
				to any <b>path siphon</b> URL that does not already have a file
				extension and does not end with a &quot;<b>/</b>&quot;. A special
				value of <b>inherit</b> can be used if fragments should inherit the
				parent page file extension (if any). Here are a few variations:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #008800; font-style: italic">&lt;!-- assume the following script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span
						style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymus&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span
						style="color: #0000FF">&quot;.&quot;</span> <span
						style="color: #FF0000">data-thx-frag-extension=</span><span
						style="color: #0000FF">&quot;.htm&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.htm :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>

<span style="color: #008800; font-style: italic">&lt;!-- assume the following script is loaded into a page at path/to/page.html --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span
						style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymus&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span
						style="color: #0000FF">&quot;.&quot;</span> <span
						style="color: #FF0000">data-thx-frag-extension=</span><span
						style="color: #0000FF">&quot;inherit&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.html :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>

<span style="color: #008800; font-style: italic">&lt;!-- assume the following script --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;script </span><span
						style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;../js/thymus.js&quot;</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thymus&quot;</span>
	<span style="color: #FF0000">data-thx-context-path=</span><span
						style="color: #0000FF">&quot;.&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/script&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the following includes/replacements --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person/ :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">data-thx-include=</span><span
						style="color: #0000FF">&quot;/frags/person.xml :: #data&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
</pre></div>
			<h3 id="attrpaths">Attribute Path Resolution</h3>
			<p>
				Relative URLs within the standard URL related attributes are
				resolved using either the path defined within
				<code>data-thx-base-path</code>
				(<a href="#getstarted">more details</a>) or <b>automatically</b> by
				the browser using the
				<code>href</code>
				attribute set on the
				<code>base</code>
				tag. However, some versions of Internet Explorer do not properly
				resolve relative URLs using the <b>base</b> tag. In that case, when
				an
				<code>href</code>
				has been defined on a
				<code>base</code>
				tag and no path has been defined using the
				<code>data-thx-base-path</code>
				attribute or when a path has been defined by using just the
				<code>data-thx-base-path</code>
				attribute, <b>thymus.js</b> will convert the following relative URLs
				to their absolute counterparts that are found within the following
				attributes (<a href="#fragsoptsprog">configurable</a>):
			</p>
			<ul id="attrpathsdflt">
				<li class="badge"><code>action</code></li>
				<li class="badge"><code>archive</code></li>
				<li class="badge"><code>background</code></li>
				<li class="badge"><code>cite</code></li>
				<li class="badge"><code>classid</code></li>
				<li class="badge"><code>codebase</code></li>
				<li class="badge"><code>data</code></li>
				<li class="badge"><code>dynsrc</code></li>
				<li class="badge"><code>formaction</code></li>
				<li class="badge"><code>href</code></li>
				<li class="badge"><code>icon</code></li>
				<li class="badge"><code>longdesc</code></li>
				<li class="badge"><code>lowsrc</code></li>
				<li class="badge"><code>manifest</code></li>
				<li class="badge"><code>poster</code></li>
				<li class="badge"><code>profile</code></li>
				<li class="badge"><code>src</code></li>
				<li class="badge"><code>usemap</code></li>
			</ul>
			<h3 id="otherfragtargets">Siphons</h3>
			<p>
				A <i>siphon</i> in a most practical sense is just one or more JQuery
				selectors with an optional insertion/extraction directives and in
				some cases can also be a
				<code>function</code>
				that will <em>handle</em> the extraction and/or placement of data
				within the DOM. In order to aid in the process of JQuery node
				selection, <b>thymus.js</b> introduces the concept of <b>siphon
					resolver</b>s. A <b>siphon resolver</b> gives a JQuery selector the
				ability to designate how the selected node(s) will be used. <b>siphon
					resolver</b>s come in two flavors:
			</p>
			<ul>
				<li><code>?{}</code> (<b>surrogate siphon resolver</b>) - the
					wrapped JQuery selector will be used to select the node(s) where
					value(s) will be extracted and used to replace the expression
					within the final siphon definition string (see the <a
					href="#resolvermatrix">compatibility matrix</a>)</li>
				<li><code>|{}</code> (<b>node siphon resolver</b>) - the
					wrapped JQuery selector will be used to select the node(s) used by
					the siphon (see the <a href="#resolvermatrix">compatibility
						matrix</a>)</li>
			</ul>
			<h4 id="resolvermatrix">Siphon Resolver Compatibility</h4>
			<div class="table-responsive">
				<table class="table thymus-matrix">
					<tr>
						<th class="lbl"></th>
						<th><b class="app-tooltip-top hidden-sm hidden-xs"
							title="?{}">surrogate siphon resolver</b> <code
								class="visible-sm visible-xs" title="surrogate siphon resolver">?{}</code></th>
						<th><b class="app-tooltip-top hidden-sm hidden-xs"
							title="|{}">node siphon resolver</b> <code
								class="visible-sm visible-xs" title="node siphon resolver">!{}</code></th>
					</tr>
					<tr>
						<td class="lbl"><b>path</b></td>
						<td><i class="fa fa-check fa-green"></i></td>
						<td><i class="fa fa-times fa-red"></i></td>
					</tr>
					<tr>
						<td class="lbl"><b>parameter</b></td>
						<td><i class="fa fa-check fa-green"></i></td>
						<td><i class="fa fa-check fa-green"></i></td>
					</tr>
					<tr>
						<td class="lbl"><b>result</b></td>
						<td><i class="fa fa-check fa-green"></i></td>
						<td><i class="fa fa-check fa-green"></i></td>
					</tr>
					<tr>
						<td class="lbl"><b>destination</b></td>
						<td><i class="fa fa-check fa-green"></i></td>
						<td><i class="fa fa-check fa-green"></i></td>
					</tr>
				</table>
			</div>
			<p>
				Each <b>siphon resolver</b> can also be used with or without an
				appended directive that indicates how to insert/extract value(s)
				from the selected node(s). A directive is preceeded by a single
				JQuery selector followed by a directive delimiter (
				<code>-&gt;</code>
				) and one of the following directives:
			</p>
			<ul>
				<li><code>text</code> - will use <a
					href="http://api.jquery.com/text/">JQuery.text()</a> to
					insert/extract value(s) returned from the JQuery selected node(s)</li>
				<li><code>html</code> - will use <a
					href="http://api.jquery.com/html/">JQuery.html()</a> to
					insert/extract value(s) returned from the JQuery selected node(s)</li>
				<li>a name of an attribute - will use <a
					href="http://api.jquery.com/attr/">JQuery.attr()</a> to
					insert/extract value(s) returned from the JQuery selected node(s)
				</li>
				<li>an event name and <b>siphon attribute</b> name (separated
					by <code>-&gt;</code>) - will use the event name in the target's <b>event
						siphon</b> to detrmine the index used to insert/extract the specified
					<b>siphon attribute</b> (see examples for more details)
				</li>
				<li>no directive - <b>surrogate siphon resolver</b>s will use <a
					href="http://api.jquery.com/val/">JQuery.val()</a> by default to
					extract replacement value(s) from the selected JQuery node(s). By
					default, <b>node siphon resolver</b>s will use <a
					href="http://api.jquery.com/val/">JQuery.val()</a> for <b>parameter
						siphon</b>s and <a href="http://api.jquery.com/html/">JQuery.html()</a>
					for <b>result siphon</b>s and <b>destination siphon</b>s.
				</li>
			</ul>
			<h4 id="fragpathsub">Fragment Path Substitutions</h4>
			<p>
				When URLs are dependent upon user input static URLs will not
				suffice. In this case a path substitution can be made using one or
				more <b>surrogate siphon resolver</b>s. Lets consider a <b>path
					siphon</b> where <b>surrogate siphon resolver</b>s can be used. Any <b>surrogate
					siphon resolver</b> found will result in a JQuery node selection. Node
				value(s) will be captured from the queried nodes using the
				appropriate directive and replaced within the <b>path siphon</b>.
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #000080; font-weight: bold">&lt;button</span> <span
	style="color: #FF0000">data-thx-post=</span><span
	style="color: #0000FF">&quot;click&quot;</span> 
	<span style="color: #FF0000">data-thx-post-path=</span><span
						style="color: #0000FF">&quot;frags/first/?{#secondPath-&gt;text}/sixth&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Post Something<span
						style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;secondPath&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>?{#second}/?{#thirdFourthPath :input}/?{.fifth-path-&gt;data-mypath}<span
						style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;select</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;second&quot;</span> <span
						style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;secondPath&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
    <span style="color: #000080; font-weight: bold">&lt;option&gt;</span>second<span
						style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
    <span style="color: #000080; font-weight: bold">&lt;option&gt;</span>2nd<span
						style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/select&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;thirdFourthPath&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
    <span style="color: #000080; font-weight: bold">&lt;input</span> <span
						style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span
						style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;someInput&quot;</span> <span
						style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;third&quot;</span> <span
						style="color: #000080; font-weight: bold">/&gt;</span>
    <span style="color: #000080; font-weight: bold">&lt;input</span> <span
						style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span
						style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;someOtherInput&quot;</span> <span
						style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;fourth&quot;</span> <span
						style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;fifth-path&quot;</span> <span
						style="color: #FF0000">data-mypath=</span><span
						style="color: #0000FF">&quot;fifth&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- result path would be: --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!--frags/first/second/third/fourth/fifth/sixth --&gt;</span>
</pre></div>
			<p>
				The preceeding <b>path siphon</b> would get evaluated when the
				button is clicked. When the first URL siphon is discovered within
				the wrapped
				<code>?{}</code>
				it will capture the node(s) returned by the JQuery
				<code>#secondPath</code>
				selector. The
				<code>-&gt;</code>
				defines a
				<code>text</code>
				directive that will use the <a href="http://api.jquery.com/text/">JQuery.text()</a>
				function to extract the value. Once the path segment is captured
				from the
				<code>#secondPath</code>
				discovery occurs using the same extraction methods on each of the
				<code>?{}</code>
				segments found in
				<code>?{#second}/?{#thirdFourthPath
					:input}/?{.fifth-path-&gt;data-mypath}</code>
				. The
				<code>#second</code>
				JQuery selector has no
				<code>-&gt;</code>
				directive so it uses the default <a
					href="http://api.jquery.com/val/">JQuery.val()</a>. Next, the
				<code>#thirdFourthPath :input</code>
				JQuery selector is used to capture node(s) and <a
					href="http://api.jquery.com/serializeArray/">JQuery.serializeArray()</a>
				is called on the returned node(s) because there is no
				<code>-&gt;</code>
				directive and there is no <a href="http://api.jquery.com/val/">JQuery.val()</a>
				on
				<code>div</code>
				s. Each of the serialized array values are captured and inserted
				into the path separated by a
				<code>/</code>
				(<a href="#fragsoptsprog">configurable</a>). The final
				<code>.fifth-path</code>
				JQuery selector is used to capture the node(s) where the
				<code>-&gt;</code>
				directive for the attribute
				<code>data-mypath</code>
				is evaluated and inserted into the path. The siphoned path then
				becomes
				<code>frags/first/second/third/fourth/fifth/sixth</code>
				.
			</p>
<!-- 			<p> -->
<!-- 				Siphons can also contain HTTP verb scoped variables. Variables are -->
<!-- 				set within -->
<!-- 				<a href="#domvarsiphon"><b>variable siphon</b></a> attributes using -->
<!-- 				a unique variable name followed by a &quot;<b>=</b>&quot; and a -->
<!-- 				value that will be assigned. Assigned values are literal replacements and will not be evaluated using operators like typical JS variables. A -->
<!-- 				<b>variable siphon</b> can also have more than one variable -->
<!-- 				definition by separating them with a &quot;<b>,</b>&quot;. -->
<!-- 				<div class="btn-group" id="userDest2Grp" -->
<!-- 								data-thx-get-path="frags/user/${userKey}?userKey2=${userKey2}" -->
<!-- 								data-thx-get-result="[class^=&quot;thymus-user&quot;]" -->
<!-- 								data-thx-get-dest="#userDestAgent" data-thx-get-type="update"> -->
<!-- 								<button type="button" class="btn btn-primary active"  -->
<!-- 									data-thx-get="load :: click"  -->
<!-- 									data-thx-get-agent="#userDest2Grp" -->
<!-- 									data-thx-get-with="userKey=user1">Include -->
<!-- 									User1</button> -->
<!-- 								<button type="button" class="btn btn-primary" -->
<!-- 									data-thx-get="click"  -->
<!-- 									data-thx-get-agent="#userDest2Grp" -->
<!-- 									data-thx-get-with="userKey=user2,userKey2=${userKey}">Include -->
<!-- 									User2</button> -->
<!-- 								<button type="button" class="btn btn-primary" -->
<!-- 									data-thx-get="click"  -->
<!-- 									data-thx-get-agent="#userDest2Grp" -->
<!-- 									data-thx-get-with="userKey=user3">Include -->
<!-- 									User3</button> -->
<!-- 							</div> -->
<!-- 			</p> -->
			<h4 id="fragparamchain">Chaining Parameter Selectors</h4>
			<p>
				A <b>parameter siphon</b> can contain a single raw JQuery selector
				or can contain one or more <b>surrogate siphon resolver</b>s in
				order to build the final <b>parameter siphon</b> JQuery selector. A
				<b>parameter siphon</b> can also contain one or more <b>node
					siphon resolver</b>s. Each parameter sent will contain a <i>key</i>/<i>value</i>
				pair for each node returned from the JQuery selector results. The <i>key</i>
				will use either the <b>name</b> or <b>id</b> of the selected node
				(in that order of precedence- can be <a href="#fragsoptsprog">configured</a>
				to use a custom set of attributes as well). To illustrate the
				dynamic nature of <b>siphon resolver</b>s within <b>parameter
					siphon</b>s consider the following example:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- the following button --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;/path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-params=</span><span style="color: #0000FF">&quot;|{.one-vals} |{#two-&gt;text} |{#three-&gt;data-my-param} ?{select[name=&amp;quot;fourSel&amp;quot;]}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;#myDestw&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Get Resource<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDestw&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;#1a value&quot;</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;one-vals&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;oneA&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;#1b value&quot;</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;one-vals&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;oneB&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;two&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>#2 value<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">data-my-param=</span><span style="color: #0000FF">&quot;#3 value&quot;</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;three&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;select</span> <span style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;fourSel&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.four-1}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Parameter Option 1<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.four-2}&quot;</span> <span style="color: #FF0000">selected=</span><span style="color: #0000FF">&quot;selected&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Parameter Option 2<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/select&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;four&quot;</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;four-1&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;#4 option 1&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;text&quot;</span> <span style="color: #FF0000">name=</span><span style="color: #0000FF">&quot;four&quot;</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;four-2&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;#4 option 2&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- would send the parameters: --&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- oneA=%231a%20value&amp;oneB=%231b%20value&amp;two=%232%20value&amp;three=%233%20value&amp;four=%234%20option%202 --&gt;</span>
</pre></div>
			<p>
				The first order of resolution in the example above will be to
				replace any <b>surrogate siphon resolver</b>s that may exist in the
				<b>parameter siphon</b>. So,
				<code>?{select[name=&quot;fourSel&quot;]}</code>
				gets replaced with the <a href="http://api.jquery.com/val/">JQuery.val()</a>
				(default directive) of the <i>select</i> node returned from the
				JQuery selector which results in
				<code>|{.one-vals} |{#two-&gt;text}
					|{#three-&gt;data-my-param} |{.four-2}</code>
				. Next,
				<code>|{.one-vals}</code>
				selects the two nodes that have the <i>one-vals</i> class. The <i>id</i>
				is captured as the key and the default directive uses <a
					href="http://api.jquery.com/val/">JQuery.val()</a> as the parameter
				<i>value</i> for each of the two nodes (i.e.
				<code>oneA=%231a%20value&amp;oneB=%231b%20value</code>
				). Then,
				<code>|{#two-&gt;text}</code>
				uses the JQuery selector <i>#two</i> to capture the div with the
				matching id and extracts the <i>text</i> of the node using the
				supplied directive. A simliar capture is performed for the
				<code>|{#three-&gt;data-my-param}</code>
				<b>node siphon resolver</b>, but using an attribute as the
				directive. Finally, the default <a href="http://api.jquery.com/val/">JQuery.val()</a>
				directive is used for
				<code>|{.four-2}</code>
				completing the final parameter extraction of
				<code>oneA=%231a%20value&amp;oneB=%231b%20value&amp;two=%232%20value&amp;three=%233%20value&amp;four=%234%20option%202</code>
				(each value is set using
				<code>encodeURIComponent</code>
				) that will be sent when the button is clicked.
			</p>
			<h4 id="fragresultchain">Chaining Result Selectors</h4>
			<p>
				A <b>result siphon</b> works slightly different than most other
				siphons. Instead of using the current document when making JQuery
				node selections, it uses the incoming document. If the results have
				a content-type other than HTML or XML the <b>result siphon</b>
				should be either omitted (in which case the entire result will be
				selected) or use a <a href="#fragshandler">result handler</a>. Lets
				take a look at a few scenarios:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%">
<span style="color: #008800; font-style: italic">&lt;!-- assume the following fragment snippet resides at path/to/resource --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myResult&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;selClass&quot;</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource2&quot;</span>
		<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult2&quot;</span> <span
						style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;.some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Post
		Something<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>

<span style="color: #008800; font-style: italic">&lt;!-- 1) the page contains the following node that uses a raw JQuery selector --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult&quot;</span> <span
						style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;#myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Get
	Resource<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- when clicked would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult&quot;</span> <span
						style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;#myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Get
	Resource<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;myResult&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;selClass&quot;</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource2&quot;</span>
			<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult2&quot;</span> <span
						style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;.some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Post
			Something<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>


<span style="color: #008800; font-style: italic">&lt;!-- 2) the page contains the following node that siphons JQuery selector(s) --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult ?{#selClass-&gt;data-thx-get-dest}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;#myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Get Resource<span
						style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- when clicked would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span
						style="color: #FF0000">data-thx-get=</span><span
						style="color: #0000FF">&quot;click&quot;</span> <span
						style="color: #FF0000">data-thx-get-path=</span><span
						style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span
						style="color: #0000FF">&quot;#myResult ?{#selClass-&gt;data-thx-get-dest}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span
						style="color: #0000FF">&quot;#myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>Get Resource<span
						style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span
						style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;some-class&quot;</span><span
						style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
			<p>
				In the first example
				<code>.some-class</code>
				is used as the raw JQuery selector for capturing the nodes from the
				fragment results that will be inserted into the DOM. The second
				example uses
				<code>#myResult ?{#selClass-&gt;data-thx-get-dest}</code>
				which contains a <b>siphon resolver</b> that will capture the value
				from the
				<code>data-thx-get-dest</code>
				attribute on the button with the
				<code>selClass</code>
				ID. The <b>result siphon</b> then becomes
				<code>#myResult .some-class</code>
				. There are no more <b>siphon resolver</b>s that need to be
				evaluated in the expression. So, all elements under the element with
				the
				<code>myResult</code>
				ID that have a class of
				<code>some-class</code>
				will be <i>included</i> in the <b>destination siphon</b>.
			</p>
			<p>
				<b>result siphon</b>s can also use <b>node siphon resolver</b>s to
				designate directives that indicate what parts of the selected
				node(s) will be used. Lets take a look at an example:
			</p>
<div class="thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-style: italic">&lt;!-- assume the following fragment snippet resides at path/to/resource --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;my-other-class&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;someData&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		...
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;my-class&quot;</span> <span style="color: #FF0000">data-my-attr=</span><span style="color: #0000FF">&quot;abc&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;my-class&quot;</span> <span style="color: #FF0000">data-my-attr=</span><span style="color: #0000FF">&quot;def&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	...
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- and the page contains the following node that siphons JQuery selector(s) --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;|{.my-class-&gt;data-my-attr} |{.my-other-class}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;#myDest&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Get Resource<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span style="color: #000080; font-weight: bold">&gt;&lt;/div&gt;</span>
<span style="color: #008800; font-style: italic">&lt;!-- when clicked would result in --&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;path/to/resource&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;|{.my-class-&gt;data-my-attr} |{.my-other-class}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;#myDest&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Get Resource<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;myDest&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	abcdef
	<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;my-other-class&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
		<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;someData&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
			...
		<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
			<h4 id="fragdestchain">Chaining Destination Selectors</h4>
			<p>
				A <b>destination siphon</b> can contain a single raw JQuery selector
				or one or more <b>surrogate siphon resolver</b>s and/or <b>node
					siphon resolver</b>s. Each JQuery selector will funnel incoming <b>result
					siphon</b> results into the selected destination node(s). Like other <b>siphon
					attribute</b>s, <b>node siphon resolver</b>s will use directives to
				determine how the results will be added. When a <b>destination
					siphon</b> is not defined the <b>destination siphon</b> will select the
				node where the <b>event siphon</b> is defined. Lets take a look at a
				few scenarios:
			</p>
			<div class="row">
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Demo:</button>
								</div>
								<div class="col-md-10">
									<button id="msr" data-thx-get="click"
										data-thx-get-path="frags/user/form"
										data-thx-get-type="async|update" class="btn btn-primary"
										data-thx-get-result="|{.user-btn} |{#user->data-src} |{.user-name} |{:input:not(:button)}"
										data-thx-get-dest="|{.msr-1} |{.msr-2} |{#msr-3->text} |{.msr-4->value} ?{#msr-5}">Run</button>
								</div>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr-1">
								<strong>msr-1:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr-1">
								<strong>msr-1:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr-2">
								<strong>msr-2:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div id="msr-3">
								<strong>msr-3:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<strong>msr-4:</strong>
							<input class="msr-4 form-control" value="" />
							<input class="msr-4 form-control" value="" />
						</div>
						<div class="list-group-item">
							<strong>msr-5:</strong>
							<select id="msr-5">
								<option value="|{.msr-5-1->value}">Input 1</option>
								<option value="|{.msr-5-2->value}" selected="selected">Input 2</option>
							</select>
							<input class="msr-5-1 form-control" value="" />
							<input class="msr-5-2 form-control" value="" />
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Code:</button>
								</div>
								<div class="col-md-10">
									<button type="button" class="btn btn-primary"
										data-thx-get="click"
										data-thx-get-path="user/example?page=?{#msr->data-thx-get-path}"
										data-thx-get-type="sync|transfer" data-thx-get-target="_blank">Fragment</button>
								</div>
							</div>
						</div>
<div class="list-group-item thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;frags/user/form&quot;</span>
	<span style="color: #FF0000">data-thx-get-type=</span><span style="color: #0000FF">&quot;async|update&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;|{.user-btn} |{#user-&gt;data-src} |{.user-name} |{:input:not(:button)}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;|{.msr-1} |{.msr-2} |{#msr-3-&gt;text} |{.msr-4-&gt;value} ?{#msr-5}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	Run<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-1:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-1:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-2&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-2:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-3&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-3:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-4:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-4&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-4&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr-5:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;select</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;msr-5&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.msr-5-1-&gt;value}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Input 1<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.msr-5-2-&gt;value}&quot;</span> <span style="color: #FF0000">selected=</span><span style="color: #0000FF">&quot;selected&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Input 2<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/select&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-5-1&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr-5-2&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
</pre></div>
					</div>
				</div>
			</div>
			<p id="rsltDir">
				In the preceding example each of the <b>node siphon resolver</b>s
				defined within the <b>result siphon</b> capture their corresponding
				node data. Captured data is combined to form the final result. The
				cumlative result is then set on each of the nodes found for each of
				the <b>node siphon resolver</b>s specified within the <b>destination
					siphon</b>. While this type of behavior may be desired in some use
				cases, a more finite control may be more desirable. In such cases a
				<b>result siphon</b> can contain special <b>node siphon resolver</b>(s)
				that have a built-in destination. The result and destination JQuery
				selectors are separated by using a
				<code>=&gt;</code>
				<b>result directive</b> (as well as an optional <a
					href="#domdestinationtype">destination type</a>). Consider the
				following:
			</p>
			<div class="row">
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Demo:</button>
								</div>
								<div class="col-md-10">
									<button id="msr2" data-thx-get="click"
										data-thx-get-path="frags/user/form"
										data-thx-get-type="async|update" class="btn btn-primary"
										data-thx-get-result="|{.user-btn=>.msr2-1=>include} |{#user->data-src} |{.user-name} |{:input:not(:button)}"
										data-thx-get-dest="|{.msr2-2} |{#msr2-3->text} |{.msr2-4->value} ?{#msr2-5}">Run</button>
								</div>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr2-1">
								<strong>msr2-1:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr2-1">
								<strong>msr2-1:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr2-2">
								<strong>msr2-2:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div id="msr2-3">
								<strong>msr2-3:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<strong>msr2-4:</strong>
							<input class="msr2-4 form-control" value="" />
							<input class="msr2-4 form-control" value="" />
						</div>
						<div class="list-group-item">
							<strong>msr2-5:</strong>
							<select id="msr2-5">
								<option value="|{.msr2-5-1->value}">Input 1</option>
								<option value="|{.msr2-5-2->value}" selected="selected">Input 2</option>
							</select>
							<input class="msr2-5-1 form-control" value="" />
							<input class="msr2-5-2 form-control" value="" />
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Code:</button>
								</div>
								<div class="col-md-10">
									<button type="button" class="btn btn-primary"
										data-thx-get="click"
										data-thx-get-path="user/example?page=?{#msr2->data-thx-get-path}"
										data-thx-get-type="sync|transfer" data-thx-get-target="_blank">Fragment</button>
								</div>
							</div>
						</div>
<div class="list-group-item thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;frags/user/form&quot;</span>
	<span style="color: #FF0000">data-thx-get-type=</span><span style="color: #0000FF">&quot;async|update&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;|{.user-btn=&gt;.msr2-1=&gt;include} |{#user-&gt;data-src} |{.user-name} |{:input:not(:button)}&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;|{.msr2-2} |{#msr2-3-&gt;text} |{.msr2-4-&gt;value} ?{#msr2-5}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Run<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-1:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-1:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-2&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-2:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-3&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-3:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-4:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-4&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-4&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr2-5:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;select</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;msr2-5&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.msr2-5-1-&gt;value}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Input 1<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;|{.msr2-5-2-&gt;value}&quot;</span> <span style="color: #FF0000">selected=</span><span style="color: #0000FF">&quot;selected&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Input 2<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/select&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-5-1&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;input</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr2-5-2&quot;</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;&quot;</span> <span style="color: #000080; font-weight: bold">/&gt;</span>
</pre></div>
					</div>
				</div>
			</div>
			<p>
				Instead of using
				<code>|{.msr-1}</code>
				within the <b>destination siphon</b> it has been defined using a <b>result
					directive</b> using
				<code>|{.user-btn=&gt;.msr2-1=&gt;include}</code>
				. The selector for
				<code>.user-btn</code>
				is no longer part of the cumulative result because it has it's own
				destination designation. Also, the result will not be <i>updated</i>,
				but rather <i>included</i> due to the override designation. 
			</p>
			<p>
				When using <i>only</i> <b>node siphon resolver</b>s that contain <b>result
					directive</b>s the <b>destination siphon</b> can be omitted:
			</p>
			<div class="row">
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Demo:</button>
								</div>
								<div class="col-md-10">
									<button id="msr3" data-thx-get="click"
										data-thx-get-path="frags/user/form"
										data-thx-get-type="async|update" class="btn btn-primary"
										data-thx-get-result="|{#user->data-src=>.msr3-1}">Run</button>
								</div>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr3-1">
								<strong>msr3-1:</strong><br/>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Code:</button>
								</div>
								<div class="col-md-10">
									<button type="button" class="btn btn-primary"
										data-thx-get="click"
										data-thx-get-path="user/example?page=?{#msr3->data-thx-get-path}"
										data-thx-get-type="sync|transfer" data-thx-get-target="_blank">Fragment</button>
								</div>
							</div>
						</div>
<div class="list-group-item thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;button</span> <span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;click&quot;</span> <span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;frags/user/form&quot;</span>
	<span style="color: #FF0000">data-thx-get-type=</span><span style="color: #0000FF">&quot;async|update&quot;</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;btn btn-primary&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;|{.user-&gt;data-src=&gt;.msr3-1}&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Run<span style="color: #000080; font-weight: bold">&lt;/button&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr3-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>msr3-1:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
</pre></div>
					</div>
				</div>
			</div>
			<p>
				There may be instances where a <b>surrogate siphon resolver</b> may
				need to extract a <b>siphon attribute</b> from another node that has
				<a href="#multidomevents">multiple events</a>. Of course the entire
				siphon attribute value can be extracted, but would require some
				additional steps to be undertaken to match which value goes with
				which event. To avoid this requirement a <b>surrogate siphon
					resolver</b> can contain an intermediary directive that will designate
				the event that will be used to extract the <b>siphon attribute</b>.
				Consider the following demo:
			</p>
			<div class="row">
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Demo:</button>
								</div>
								<div class="col-md-10">
									<video id="msr4" controls="controls"
										data-thx-get="play :: pause :: ended"
										data-thx-get-path="frags/user/user1 :: frags/user/user2 :: frags/user/user3"
										data-thx-get-result="[class^=thymus-user]"
										data-thx-get-dest=".msr4-1 :: .msr4-2 :: .msr4-3">
										<source src="http://www.w3schools.com/tags/mov_bbb.mp4" type="video/mp4">
										<source src="http://www.w3schools.com/tags/mov_bbb.ogg" type="video/ogg">
										<ins>Your browser does not support HTML5 video.</ins>
									</video>
								</div>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr4-1">
								<strong>From Video Start:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr4-2">
								<strong>From Video Pause:</strong><br/>
							</div>
						</div>
						<div class="list-group-item">
							<div class="msr4-3">
								<strong>From Video Ended:</strong><br/>
							</div>
						</div>
					</div>
				</div>
				<div class="col-md-6">
					<div class="list-group">
						<div class="list-group-item">
							<div class="row">
								<div class="col-md-2">
									<button type="button" class="btn btn-default"
										disabled="disabled">Code:</button>
								</div>
								<div class="col-md-10">
									<select id="msr4Sel" class="btn btn-primary"
										data-thx-get="change" 
										data-thx-get-path="user/example?page=?{#msr4->?{#msr4Sel}->data-thx-get-path}"
										data-thx-get-type="sync|transfer" data-thx-get-target="_blank">
										<option selected="selected" disabled="disabled">Select Fragment...</option>
										<option value="play">Play Fragment</option>
										<option value="pause">Pause Fragment</option>
										<option value="ended">Ended Fragment</option>
									</select>
								</div>
							</div>
						</div>
<div class="list-group-item thymus-demo"><pre style="margin: 0; line-height: 125%"><span style="color: #000080; font-weight: bold">&lt;video</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;msr4&quot;</span> <span style="color: #FF0000">controls=</span><span style="color: #0000FF">&quot;controls&quot;</span>
	<span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;play :: pause :: ended&quot;</span>
	<span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;frags/user/user1 :: frags/user/user2 :: frags/user/user3&quot;</span>
	<span style="color: #FF0000">data-thx-get-result=</span><span style="color: #0000FF">&quot;[class^=thymus-user]&quot;</span>
	<span style="color: #FF0000">data-thx-get-dest=</span><span style="color: #0000FF">&quot;.msr4-1 :: .msr4-2 :: .msr4-3&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;source</span> <span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;http://www.w3schools.com/tags/mov_bbb.mp4&quot;</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;video/mp4&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;source</span> <span style="color: #FF0000">src=</span><span style="color: #0000FF">&quot;http://www.w3schools.com/tags/mov_bbb.ogg&quot;</span> <span style="color: #FF0000">type=</span><span style="color: #0000FF">&quot;video/ogg&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;ins&gt;</span>Your browser does not support HTML5 video.<span style="color: #000080; font-weight: bold">&lt;/ins&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/video&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr4-1&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>From Video Start:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;&lt;br/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr4-2&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>From Video Pause:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;&lt;br/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;div</span> <span style="color: #FF0000">class=</span><span style="color: #0000FF">&quot;msr4-3&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;strong&gt;</span>From Video Ended:<span style="color: #000080; font-weight: bold">&lt;/strong&gt;&lt;br/&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/div&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;select</span> <span style="color: #FF0000">id=</span><span style="color: #0000FF">&quot;msr4Sel&quot;</span>
	<span style="color: #FF0000">data-thx-get=</span><span style="color: #0000FF">&quot;change&quot;</span> 
	<span style="color: #FF0000">data-thx-get-path=</span><span style="color: #0000FF">&quot;user/example?page=?{#msr4-&gt;?{#msr4Sel}-&gt;data-thx-get-path}&quot;</span>
	<span style="color: #FF0000">data-thx-get-type=</span><span style="color: #0000FF">&quot;sync|transfer&quot;</span> <span style="color: #FF0000">data-thx-get-target=</span><span style="color: #0000FF">&quot;_blank&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">selected=</span><span style="color: #0000FF">&quot;selected&quot;</span> <span style="color: #FF0000">disabled=</span><span style="color: #0000FF">&quot;disabled&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Select event...<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;play&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Play Fragment<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;pause&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Pause Fragment<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
	<span style="color: #000080; font-weight: bold">&lt;option</span> <span style="color: #FF0000">value=</span><span style="color: #0000FF">&quot;ended&quot;</span><span style="color: #000080; font-weight: bold">&gt;</span>Ended Fragment<span style="color: #000080; font-weight: bold">&lt;/option&gt;</span>
<span style="color: #000080; font-weight: bold">&lt;/select&gt;</span>
</pre></div>
					</div>
				</div>
			</div>
			<div class="alert alert-info">
				<strong>Note:</strong> Even though some siphons can simultaneously
				contain raw JQuery selectors as well as <b>node siphon resolver</b>s
				(e.g.
				<code>.my-class |{.my-other-class-&gt;text}</code>
				), the order of usage or insertion into the DOM is not guaranteed as
				it would be for siphons that contained only <b>node siphon
					resolver</b>s (e.g.
				<code>|{.my-class} |{.my-other-class-&gt;text}</code>
				).
			</div>
			<div class="alert alert-info">
				<strong>Note:</strong> Although <b>surrogate siphon resolver</b>s
				can be nested (e.g.
				<code>user/example?page=?{#msr4-&gt;?{#msr4Sel}-&gt;data-thx-get-path}</code>
				) and <b>node siphon resolver</b>s can contain any number of nested
				<b>surrogate siphon resolver</b>s within them (e.g.
				<code>|{?{.my-class}-&gt;text}</code>
				), <b>surrogate siphon resolver</b>s should <strong>never</strong>
				contain <b>node siphon resolver</b>s (e.g.
				<code>?{|{.my-class-&gt;text}}</code>
				). Also,<b>node siphon resolver</b>s will not evaluate any <b>siphon
					resolver</b>s contained within values returned by <b>node siphon
					resolver</b> JQuery selectors.
			</div>
		</div>
	</div>
</body>
</html>